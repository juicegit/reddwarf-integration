#!/bin/bash

set -e
set -o xtrace

# CONTEXT: Host
# Purpose: creates the SSH key on the host if it doesn't exist.  Then this copies the keys over to a staging area where
# they will be duplicated in the guest VM.
# This process allows the host to log into the guest but more importantly the guest phones home to get the reddwarf
# source

source $_LIB/die

[ -n "$TMP_HOOKS_PATH." ] || die "Temp hook path not set"

[ -n "${HOST_USERNAME}" ] || die "HOST_USERNAME needs to be set to the user for the current user on the host"

if [ `whoami` = "root" ]; then
    die "This should not be run as root"
fi


generate_empty_passphrase_ssh_key () {
    echo "generating a empty passphrase DEV ONLY rsa key"
    HOMEDIR=$1
    expect -c "
spawn sudo -Hiu ${HOST_USERNAME} /usr/bin/ssh-keygen -f ${HOMEDIR}/.ssh/id_rsa -q
expect \"empty for no passphrase\"
send \n
expect assphrase
send \n
expect eof"
}

HOMEDIR=/home/${HOST_USERNAME}

if [ -e ${HOMEDIR}/.ssh ]; then
    die "/home/${HOMEDIR} already exists"
fi

if [ ! -e ${HOMEDIR}/.ssh ]; then
    sudo -Hiu ${HOST_USERNAME} mkdir -p ${HOMEDIR}/.ssh
fi

if [ ! -f ${HOMEDIR}/.ssh/id_rsa.pub ]
then
    sudo apt-get -y install expect

    #generate a public key
    generate_empty_passphrase_ssh_key ${HOMEDIR}
fi

# test to see if the host key is already in its own authorized_keys file - if not then add it.  This is then later copied
# to the guest image
is_in_keyfile=`cat ${HOMEDIR}/.ssh/id_rsa.pub | grep -f - ${HOMEDIR}/.ssh/authorized_keys | wc -l`
if [ $is_in_keyfile == 0 ]; then
    echo "Adding keyfile to authorized_keys, it does not yet exist"
    cat ${HOMEDIR}/.ssh/id_rsa.pub >> ${HOMEDIR}/.ssh/authorized_keys
fi

# copy files over the "staging" area for the guest image (they'll later be put in the correct location by the guest user
# not these keys should not be overridded otherwise a) you won't be able to ssh in and b) the guest won't be able to
# rsync the files
if [ -e ${HOMEDIR}/.ssh/authorized_keys ]; then
   sudo -Hiu ${HOST_USERNAME} cat ${HOMEDIR}/.ssh/authorized_keys > ${TMP_HOOKS_PATH}/ssh-authorized-keys
   sudo -Hiu ${HOST_USERNAME} cat ${HOMEDIR}/.ssh/id_rsa > ${TMP_HOOKS_PATH}/id_rsa
   sudo -Hiu ${HOST_USERNAME} cat ${HOMEDIR}/.ssh/id_rsa.pub > ${TMP_HOOKS_PATH}/id_rsa.pub
fi
